AWSTemplateFormatVersion: 2010-09-09
Description: WebServer with EIP
Parameters:
  myVPC:
      Description: VPC used to deploy our resources below
      Type: AWS::EC2::VPC::Id
  PublicSubnet:
      Description: Subnet to be used for our Web Server
      Type: AWS::EC2::Subnet::Id
  KeyName:
      Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
      Type: 'AWS::EC2::KeyPair::KeyName'
      ConstraintDescription: must be the name of an existing EC2 KeyPair.
  AMItoUse:
      Description: AMI to use for our base image
      Type: String
Resources:
  myWebAccessSecurityGroup: 
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to our test host
        VpcId:
          Ref: myVPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  myWebServerInstance: 
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: !Ref AMItoUse
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: "myWebAccessSecurityGroup"
          SubnetId: 
            Ref: "PublicSubnet"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
  IPAddress:
    Type: 'AWS::EC2::EIP'
  IPAssoc:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      InstanceId: !Ref myWebServerInstance
      EIP: !Ref IPAddress
Outputs:
  myWebServerInstanceID:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref myWebServerInstance
  myWebServerIPAddress:
    Description: IP address of the newly created EC2 instance
    Value: !Ref IPAddress